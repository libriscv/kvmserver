services:
  backend:
    build: .
    command:
      - /bin/bash
      - -c
      - |
        set -e;
        rm -f /sock/backend;
        umask 000;
        exec kvmserver --allow-all -e -t 2 -w 1000 -p deno -- run --allow-all \
          'data:,Deno.serve({ path: "/sock/backend" }, () => new Response("hello"))'
    devices:
      - /dev/kvm
    environment:
      - DENO_NO_UPDATE_CHECK=1
      - DENO_V8_FLAGS=--predictable,--stress-maglev,--prepare-always-turbofan,--always-turbofan,--always-sparkplug,--max-old-space-size=256,--max-semi-space-size=256
    group_add:
      # With docker we must supply the KVM_GID which varies per system:
      # $ KVM_GID=$(getent group kvm | cut -d: -f3) docker compose up
      # With rootless podman we must specify "keep-groups" (used as default here.)
      - "${KVM_GID:-keep-groups}"
    init: true
    read_only: true
    tty: true
    volumes:
      - sock:/sock
  varnish:
    depends_on:
      - backend
    environment:
      - VARNISH_HTTP_PORT=8080
    image: varnish:7.7
    network_mode: host
    ports:
      - "8080:8080"
    volumes:
      - sock:/sock
      - $PWD/default.vcl:/etc/varnish/default.vcl:ro

volumes:
  # Ideally socket volume would be tmpfs but that cannot be shared between containers.
  sock:
